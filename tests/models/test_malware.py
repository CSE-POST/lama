import unittest
from lama.models.malware import Malware
from lama.models.module_status import ModuleStatus


class TestMalware(unittest.TestCase):

    TEST_FILE = "tests/models/files/malware_file_test.txt"

    def test_attrs(self):
        m = Malware.empty_malware()
        new_name = m.factory(local_path=TestMalware.TEST_FILE,
                             remote_path="remote_path",
                             name="malware_filte_test.txt")
        self.assertEqual(m.md5, "fd7d9e777e329f97c5db97cbe82100fe")
        self.assertEqual(m.sha1, "5725d5bba8d51182ca4a4ee59708b2e467f9f1fa")
        self.assertEqual(m.mime, "text/plain")
        self.assertEqual(m.size, 30)
        self.assertEqual(m.name, "malware_filte_test.txt")
        self.assertEqual(m.parent_uid, None)

    def test_extract_malware(self):
        m = Malware.empty_malware()
        new_name = m.factory(local_path=TestMalware.TEST_FILE,
                             remote_path="remote_path",
                             name="malware_filte_test.txt")
        m.add_extract_malware("test_module", content="test")
        self.assertEqual(len(m.extract_malware), 1)
        self.assertEqual(m.extract_malware[0].name,
                         "malware_filte_test.txt_extract_test_module_0")
        self.assertEqual(m.extract_malware[0].md5,
                         "098f6bcd4621d373cade4e832627b4f6")
        self.assertEqual(m.extract_malware[0].sha1,
                         "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3")

    def test_set_module_status(self):
        m = Malware.empty_malware()
        new_name = m.factory(local_path=TestMalware.TEST_FILE,
                             remote_path="remote_path",
                             name="malware_filte_test.txt")
        m.set_module_status("test_module", ModuleStatus.MODULE_NOT_ANALYZED)
